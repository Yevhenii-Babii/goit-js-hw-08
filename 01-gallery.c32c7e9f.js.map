{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/js/gallery-items.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/01-gallery.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.10.4\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            this.domNodes.caption.classList.add(this.options.captionClass);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let scrollDiv = document.createElement('div'),\n                    paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n\n                scrollDiv.classList.add('sl-scrollbar-measure');\n\n                document.body.appendChild(scrollDiv);\n                scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                document.body.removeChild(scrollDiv);\n\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self' ? this.relatedElements[this.currentImageIndex] : this.relatedElements[this.currentImageIndex].querySelector(this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        if (this.options.disableScroll) {\n            this.globalScrollbarWidth = this.toggleScrollbar('hide');\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;","import { galleryItems } from './gallery-items.js';\nimport SimpleLightbox from \"simplelightbox/dist/simple-lightbox.esm\"\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryList = document.querySelector(`.gallery`);\nconst cardsMake = createPiсtures(galleryItems);\n\n\ngalleryList.insertAdjacentHTML(\"beforeend\", cardsMake);\n// console.log(cardsMake);\nfunction createPiсtures(galleryItems) {\n    return galleryItems.map(({preview,original,description}) => {\n        \n        return ` <a class=\"gallery__item\" href=\"${original}\">\n        <img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" />\n      </a>`}).join(``);\n     \n}\n\nnew SimpleLightbox('.gallery a', {\n    captionDelay: 250,\n    captionsData: 'alt',\n    overlayOpacity: 0.9,\n  });"],"names":["Object","defineProperty","module","exports","value","default","obj","key","enumerable","configurable","writable","$665014edacbfe17b$exports","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","$74e7f8130373505f$exports","protoProps","staticProps","prototype","SimpleLightbox","elements","options","_this","this","$parcel$interopDefault","$hKHmD","sourceAttr","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","window","test","navigator","platform","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","assign","defaultOptions","isPassiveEventsSupported","checkPassiveEventsSupport","initialSelector","Array","from","document","querySelectorAll","relatedElements","transitionPrefix","calculateTransitionPrefix","initialLocationHash","hash","getRelated","filter","element","src","getAttribute","_this1","imgArr","indexOf","push","createDomNodes","domNodes","wrapper","appendChild","closeButton","navigation","spinner","eventNamespace","event","isValidLink","currentTarget","preventDefault","isAnimating","initialImageIndex","openImage","addEventListener","isOpen","body","parentElement","classList","contains","throttle","controlCoordinates","currentImage","setAttribute","opts","get","supportsPassive","e","overlay","createElement","add","dataset","opacityTarget","overlayOpacity","innerHTML","concat","counter","caption","image","func","limit","inThrottle","apply","arguments","setTimeout","RegExp","s","documentElement","style","type","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","isAppleDevice","scrollDiv","paddingRight","parseInt","offsetWidth","removeChild","originalPaddingRight","scrollbarWidth","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","isClosing","currentImageIndex","dispatchEvent","Event","historyHasChanges","hashReseted","resetHash","removeEventListener","fadeOut","toggleScrollbar","querySelector","minMax","location","substring","index","next","prev","nextImage","Image","prevImage","loadedImages","direction","slideDirection","newIndex","slide","_this2","show","adjustImage","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","loadImage","_this5","updateURL","captionText","imageWidth","width","imageHeight","height","ratio","top","globalScrollbarWidth","forceFocus","fadeIn","captionContainer","hide","_this4","_this3","setCaption","min","max","bind","_this7","hashchangeHandler","getElementsByTagName","tagName","match","_this6","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","setZoomData","clientX","clientY","touches","_this8","_this9","sqrt","transitionCapable","possibleDir","_this10","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","split","newHash","pushStateSupport","title","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","updateHash","pos","speed","targetURL","events","callback","wrap","_didIteratorError","_iteratorError","_step","namespaces","_didIteratorError1","_iteratorError1","_step1","_iterator1","Symbol","iterator","_iteratorNormalCompletion1","done","passive","return","_iterator","_iteratorNormalCompletion","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion2","duration","_didIteratorError4","_iteratorError4","_iteratorNormalCompletion4","fade","step","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion3","_didIteratorError6","_iteratorError6","_didIteratorError5","_iteratorError5","_step4","_iterator4","_iteratorNormalCompletion5","isFadeIn","initialDisplay","input","fullyNamespacedEvents","_didIteratorError7","_iteratorError7","_step5","_iterator5","_didIteratorError8","_iteratorError8","_step6","_iterator6","_iteratorNormalCompletion8","elem","off","$d8d07e2615fdd861$var$galleryList","$d8d07e2615fdd861$var$cardsMake","preview","original","description","map","param","join","insertAdjacentHTML","$da756839c7c43f1c$export$2e2bcd8739ae039"],"version":3,"file":"01-gallery.c32c7e9f.js.map"}